import { z } from 'zod';
import { ObjectIdSchema } from './utils';

// Base document schema for {{.Name}}
export const {{.Name}}Schema = z.object({
  _id: ObjectIdSchema,{{range $fieldName, $field := .Fields}}
  {{$fieldName}}: {{zodType $field.Type $field.Required}},{{end}}{{if .Options.Timestamps}}
  createdAt: z.date(),
  updatedAt: z.date(),{{end}}
});

// Create input schema (without _id and timestamps)
export const Create{{.Name}}Schema = {{.Name}}Schema.omit({
  _id: true,{{if .Options.Timestamps}}
  createdAt: true,
  updatedAt: true,{{end}}
});

// Update input schema (partial of create schema)
export const Update{{.Name}}Schema = Create{{.Name}}Schema.partial();

// Type exports inferred from Zod schemas
export type {{.Name}}Document = z.infer<typeof {{.Name}}Schema>;
export type Create{{.Name}}Input = z.infer<typeof Create{{.Name}}Schema>;
export type Update{{.Name}}Input = z.infer<typeof Update{{.Name}}Schema>;
